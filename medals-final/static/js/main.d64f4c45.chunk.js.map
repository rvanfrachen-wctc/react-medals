{"version":3,"sources":["components/Login.jsx","components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","props","onLogin","useState","username","setUsername","password","setPassword","history","useHistory","className","onSubmit","e","preventDefault","console","log","push","handleSubmit","htmlFor","onChange","target","value","autoFocus","type","name","id","placeholder","disabled","length","onClick","Medal","medal","country","onIncrement","onDecrement","canPatch","Fragment","Country","medals","onDelete","canDelete","sum","forEach","getMedalsTotal","map","NewCountry","onAdd","prompt","trim","App","apiEndpoint","countries","setCountries","connection","setConnection","useRef","canPost","user","setUser","latestCountries","current","useEffect","a","axios","get","fetchedCountries","data","fetchCountries","encodedJwt","localStorage","getItem","getUser","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","then","on","mutableCountries","concat","filter","c","idx","findIndex","catch","handleAdd","post","headers","response","status","alert","handleDelete","countryId","originalCountries","delete","handleIncrement","medalName","handleUpdate","handleDecrement","factor","jsonPatch","op","path","JSON","stringify","patch","window","location","reload","handleLogin","resp","token","setItem","decodedJwt","jwtDecode","indexOf","reduce","b","getAllMedalsTotal","href","removeItem","to","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d64f4c45.chunk.js","sourcesContent":["import React, {useState}  from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  const { onLogin } = props;\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Submit');\r\n    onLogin(username, password);\r\n    history.push(\"/\");\r\n  }\r\n  const handleCancel = () => {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <form className='loginForm' onSubmit={(e) => handleSubmit(e)}>\r\n      <p>\r\n        <label htmlFor=\"username\">Username: </label>\r\n        <input onChange={ (e) => setUsername(e.target.value) } value={username} autoFocus type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" />\r\n      </p>\r\n      <p>\r\n        <label htmlFor=\"password\">Password: </label>\r\n        <input onChange={ (e) => setPassword(e.target.value) } value={password} type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n      </p>\r\n      <p>\r\n        <button disabled={username.length === 0 || password.length === 0} type=\"submit\">Submit</button> <button onClick={handleCancel} type=\"button\">Cancel</button>\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;","import React from 'react';\n\nconst Medal = (props) => {\n  const { medal, country, onIncrement, onDecrement, canPatch } = props;\n  return (\n    <div className=\"medals\">\n      {medal.name} Medals: {country[medal.name]}\n      { canPatch && \n        <React.Fragment>\n          <button onClick={ () => onIncrement(country.id, medal.name) }>+</button>\n          <button disabled={ country[medal.name] === 0 } onClick={ () => onDecrement(country.id, medal.name) }>-</button>\n        </React.Fragment>\n      }\n    </div>\n  );\n}\n\nexport default Medal;\n","import React from 'react';\nimport Medal from './Medal';\n\nconst Country = (props) => {\n  const { country, medals, onIncrement, onDecrement, onDelete, canDelete, canPatch } = props;\n\n  const getMedalsTotal = (country, medals) => {\n    let sum = 0;\n    medals.forEach(medal => { sum += country[medal.name]; });\n    return sum;\n  }\n  return (\n    <div className=\"country\">\n      <div className=\"name\">\n        { country.name }\n        <span className=\"badge\">\n          { getMedalsTotal(country, medals) }\n        </span>\n      </div>\n      { medals.map(medal =>\n        <Medal \n          key={ medal.id } \n          country={ country } \n          medal={medal} \n          canPatch={ canPatch }\n          onIncrement={ onIncrement } \n          onDecrement={ onDecrement } />\n      ) }\n      {canDelete && <button onClick={() => onDelete(country.id)}>delete</button> }\n      <hr />\n    </div>\n  );\n}\n\nexport default Country;\n","import React from 'react';\n\nconst NewCountry = (props) => {\n  const { onAdd } = props;\n  const handleClick = () => {\n    const name = prompt('Enter country name');\n    if (name && name.trim().length > 0) {\n      onAdd(name);\n    }\n  }\n  return (\n    <div className='newCountryButton'>\n      <button onClick={ handleClick }>New Country</button>\n    </div>\n  );\n}\n\nexport default NewCountry;\n","// Repository:  medals-b-react\n// Author:      Jeff Grissom\n// Version:     8.xx-01\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { HubConnectionBuilder } from '@microsoft/signalr';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport jwtDecode from 'jwt-decode';\nimport Login from './components/Login';\nimport Country from './components/Country';\nimport NewCountry from './components/NewCountry';\nimport './App.css';\n\nconst App = () => {\n  // const apiEndpoint = \"https://localhost:5001/api/country\";\n  // const apiEndpoint = \"https://medalsapi.azurewebsites.net/api/country\";\n\n  // const apiEndpoint = \"https://localhost:5001/jwt/api/country\";\n  // const hubEndpoint = \"https://localhost:5001/medalsHub\"\n  // const usersEndpoint = \"https://localhost:5001/api/users/login\";\n\n  const apiEndpoint = \"https://medals-api-rjv.azurewebsites.net/jwt/api/country\";\n  const hubEndpoint = \"https://medals-api-rjv.azurewebsites.net/medalsHub\"\n  const usersEndpoint = \"https://medals-api-rjv.azurewebsites.net/api/users/login\";\n\n  // const apiEndpoint = \"https://medalsapi.azurewebsites.net/jwt/api/country\";\n  // const hubEndpoint = \"https://medalsapi.azurewebsites.net/medalsHub\"\n  // const usersEndpoint = \"https://medalsapi.azurewebsites.net/api/users/login\";\n  const [ countries, setCountries ] = useState([]);\n  const [ connection, setConnection] = useState(null);\n  const medals = useRef([\n    { id: 1, name: 'gold' },\n    { id: 2, name: 'silver' },\n    { id: 3, name: 'bronze' },\n  ]);\n  const [ user, setUser ] = useState(\n    {\n      name: null,\n      canPost: false,\n      canPatch: false,\n      canDelete: false\n    }\n  );\n  const latestCountries = useRef(null);\n  // latestCountries.current is a ref variable to countries\n  // this is needed to access state variable in useEffect w/o dependency\n  latestCountries.current = countries;\n\n  // this is the functional equivalent to componentDidMount\n  useEffect(() => {\n    // initial data loaded here\n    async function fetchCountries() {\n      const { data : fetchedCountries } = await axios.get(apiEndpoint);\n      setCountries(fetchedCountries);\n    }\n    fetchCountries();\n\n    const encodedJwt = localStorage.getItem(\"token\");\n    // check for existing token\n    if (encodedJwt) {\n      setUser(getUser(encodedJwt));\n    }\n\n    // signalR\n    const newConnection = new HubConnectionBuilder()\n      .withUrl(hubEndpoint)\n      .withAutomaticReconnect()\n      .build();\n\n    setConnection(newConnection);\n  }, []);\n  // componentDidUpdate (changes to connection)\n  useEffect(() => {\n    if (connection) {\n      connection.start()\n      .then(() => {\n        console.log('Connected!')\n\n        connection.on('ReceiveAddMessage', country => {\n          console.log(`Add: ${country.name}`);\n          let mutableCountries = [...latestCountries.current];\n          mutableCountries = mutableCountries.concat(country);\n\n          setCountries(mutableCountries);\n        });\n\n        connection.on('ReceiveDeleteMessage', id => {\n          console.log(`Delete id: ${id}`);\n          let mutableCountries = [...latestCountries.current];\n          mutableCountries = mutableCountries.filter(c => c.id !== id);\n\n          setCountries(mutableCountries);\n        });\n\n        connection.on('ReceivePatchMessage', country => {\n          console.log(`Patch: ${country.name}`);\n          let mutableCountries = [...latestCountries.current];\n          const idx = mutableCountries.findIndex(c => c.id === country.id);\n          mutableCountries[idx] = country;\n\n          setCountries(mutableCountries);\n        });\n      })\n      .catch(e => console.log('Connection failed: ', e));\n    }\n  // useEffect is dependent on changes connection\n  }, [connection]);\n\n  const handleAdd = async (name) => {\n    try {\n      await axios.post(apiEndpoint, {\n        name: name\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n    } catch (ex) {\n      if (ex.response && (ex.response.status === 401 || ex.response.status === 403)) {\n        alert(\"You are not authorized to complete this request\");\n      } else if (ex.response) {\n        console.log(ex.response);\n      } else {\n        console.log(\"Request failed\");\n      }\n    }\n  }\n  const handleDelete = async (countryId) => {\n    const originalCountries = countries;\n    setCountries(countries.filter(c => c.id !== countryId));\n    try {\n      await axios.delete(`${apiEndpoint}/${countryId}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        // country already deleted\n        console.log(\"The record does not exist - it may have already been deleted\");\n      } else { \n        setCountries(originalCountries);\n        if (ex.response && (ex.response.status === 401 || ex.response.status === 403)) {\n          alert(\"You are not authorized to complete this request\");\n        } else if (ex.response) {\n          console.log(ex.response);\n        } else {\n          console.log(\"Request failed\");\n        }\n      }\n    }\n  }\n  const handleIncrement = (countryId, medalName) => handleUpdate(countryId, medalName, 1);\n  const handleDecrement = (countryId, medalName) =>  handleUpdate(countryId, medalName, -1)\n  const handleUpdate = async (countryId, medalName, factor) => {\n    const idx = countries.findIndex(c => c.id === countryId);\n    const mutableCountries = [...countries ];\n    mutableCountries[idx][medalName] += (1 * factor);\n    setCountries(mutableCountries);\n    const jsonPatch = [{ op: \"replace\", path: medalName, value: mutableCountries[idx][medalName] }];\n    console.log(`json patch for id: ${countryId}: ${JSON.stringify(jsonPatch)}`);\n\n    try {\n      await axios.patch(`${apiEndpoint}/${countryId}`, jsonPatch, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        // country does not exist\n        console.log(\"The record does not exist - it may have been deleted\");\n      } else if (ex.response && (ex.response.status === 401 || ex.response.status === 403)) { \n        // in order to restore the defualt medal counts, we would need to save \n        // the page value and saved value for each medal (like in the advanced example)\n        alert('You are not authorized to complete this request');\n        // to simplify, I am reloading the page instead\n        window.location.reload(false);\n      } else if (ex.response) {\n        console.log(ex.response);\n      } else {\n        console.log(\"Request failed\");\n      }\n    }\n  }\n  const handleLogin = async (username, password) => {\n    try {\n      const resp = await axios.post(usersEndpoint, { username: username, password: password });\n      const encodedJwt = resp.data.token;\n      localStorage.setItem('token', encodedJwt);\n      setUser(getUser(encodedJwt));\n    } catch (ex) {\n      if (ex.response && (ex.response.status === 401 || ex.response.status === 400 )) {\n        alert(\"Login failed\");\n      } else if (ex.response) {\n        console.log(ex.response);\n      } else {\n        console.log(\"Request failed\");\n      }\n    }\n  }\n  const handleLogout = (e) => {\n    e.preventDefault();\n    console.log('logout');\n    localStorage.removeItem('token');\n    setUser({\n      name: null,\n      canPost: false,\n      canPatch: false,\n      canDelete: false\n    });\n    return false;\n  }\n  const getUser = (encodedJwt) => {\n    // return unencoded user / permissions\n    const decodedJwt = jwtDecode(encodedJwt);\n    return {\n      name: decodedJwt['username'],\n      canPost: decodedJwt['roles'].indexOf('medals-post') === -1 ? false : true,\n      canPatch: decodedJwt['roles'].indexOf('medals-patch') === -1 ? false : true,\n      canDelete: decodedJwt['roles'].indexOf('medals-delete') === -1 ? false : true,\n    };\n  }\n  const getAllMedalsTotal = () => {\n    let sum = 0;\n    medals.current.forEach(medal => { sum += countries.reduce((a, b) => a + b[medal.name], 0); });\n    return sum;\n  }\n  return (\n    <Router>\n      <div className='appHeading'>\n        Olympic Medals\n        <span className='badge'>\n          { getAllMedalsTotal() }\n        </span>\n        {user.name ? \n          <span className='logout'><a href=\"/\" onClick={handleLogout} className='logoutLink'>Logout</a> [{user.name}]</span>\n          :\n          <Link to=\"/login\" className='loginLink'>Login</Link>\n        }\n      </div>\n      <Route exact path=\"/login\">\n        <Login onLogin={handleLogin} />\n      </Route>\n      <div className='countries'>\n          { countries.map(country => \n            <Country \n              key={ country.id } \n              country={ country } \n              medals={medals.current}\n              canDelete={user.canDelete}\n              canPatch={ user.canPatch }\n              onDelete={ handleDelete }\n              onIncrement={ handleIncrement } \n              onDecrement={ handleDecrement } />\n          )}\n      </div>\n      {user.canPost && <NewCountry onAdd={handleAdd} /> }\n    </Router>\n  );\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}